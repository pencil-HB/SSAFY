package com.mvc.controller;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.mvc.service.ProductService;
import com.mvc.service.ProductServiceImpl;
import com.mvc.vo.Member;
import com.mvc.vo.Product;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

@Controller
public class ProductController {
	// 1. 서비스에 정보 넘기니까 service가 있어야 함
	@Autowired
	ProductService service; // 인터페이스 타입을 가짐

	@GetMapping("/list")
	public String list(HttpSession session, Model model) {
		String admin = (String) session.getAttribute("admin");
		
		ArrayList<Product> list;
		
		if(admin.equals("yes")) {
			list = service.selectAll();
		} else {
			Member user = (Member) session.getAttribute("user");
			list = service.selectByName(user.getId());
		}
		
		
		model.addAttribute("list", list);

		return "list";
	}
	
	@GetMapping("/searchDate")
	public String searchDate(@RequestParam("searchDate") String dateString, HttpSession session, Model model) {
	    String admin = (String) session.getAttribute("admin");
	    ArrayList<Product> list;

	    System.out.println(dateString);
		// 관리자 여부 확인
		if ("yes".equals(admin)) {
		    // 관리자: 전체 제품에서 날짜별 필터링
		    list = new ArrayList<>(service.getProductsByDate(dateString));
		} else {
		    // 일반 사용자: 사용자별 제품에서 날짜별 필터링
		    Member user = (Member) session.getAttribute("user");
		    list = (ArrayList<Product>) service.getUserProductsByDate(user.getId(), dateString);
		}

	    model.addAttribute("list", list); // 검색된 결과를 기존 list 뷰에 전달
	    return "list";
	}



	@GetMapping("/read")
	//public String read(HttpServletRequest request, Model model) {
	public String read(@RequestParam("code") String code, Model model) throws Exception {
//		if(num.equals("17")) {
//			throw new Exception();
//		}
		
		Product b = service.getProductByCode(code);

		model.addAttribute("b", b);
		return "read";

	}

	//화면만 출력하는 메서드
	@GetMapping("/regist")
	public String insertForm() {
		return "regist";
	}

	@PostMapping("/registProcess")
	public String insertProcess(@ModelAttribute Product b) {
		System.out.println(b);
		boolean x = service.addProduct(b);
		
		return "redirect:/list";
	}

	@GetMapping("/delete")
	public String delete(@RequestParam("num") String num) {
		service.deleteProduct(num);
		
		return "redirect:/list";
	}

	@ExceptionHandler(Exception.class)
	public ModelAndView handleException(Exception e) {
		ModelAndView mv = new ModelAndView();
		mv.addObject("msg", "exception 발생~ ㅜㅜ");
		e.printStackTrace();
		mv.setViewName("error/error");
		return mv;
	}
	
	@GetMapping("/")
	public String index(Model model) { // 메모리에 model 이라는 이름의 Model 타입이 있다면 자동으로 넣어주지만 없을 시 하나 새로 만들어서 넣어준다.
		return "index";// 기본 forward 방식
	}
}
